{"version":3,"sources":["services/CityData.js","images/down.svg","components/CitySelect.js","services/BikeData.js","images/bicycle_logo.svg","images/table.svg","images/map.svg","App.js","reportWebVitals.js","index.js"],"names":["cityList","name","CitySelect","cityData","cityOptions","Object","keys","map","item","value","className","getAuthorizon","GMTStr","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization","App","props","state","cyclePathList","data","url","query","hasOwnProperty","keyWord","push","limitNum","queryStr","join","city","fetch","headers","then","res","json","getCityPath","result","setState","error","console","log","pathList","this","hasPathList","length","pathItems","style","width","height","src","RouteName","CyclingLength","RoadSectionStart","RoadSectionEnd","div","bicycle_logo","table","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb45273.chunk.js","sourcesContent":["const cityList = {\n  \"Keelung\": {\n    name: '基隆市',\n  },\n  \"Taipei\": {\n    name: '台北市',\n  },\n  \"NewTaipei\": {\n    name: '新北市',\n  },\n  \"Taoyuan\": {\n    name: '桃園市',\n  },\n  \"Hsinchu\": {\n    name: '新竹市',\n  },\n  \"HsinchuCounty\": {\n    name: '新竹縣',\n  },\n  \"MiaoliCounty\": {\n    name: '苗栗縣',\n  },\n  \"Taichung\": {\n    name: '台中市',\n  },\n  \"ChanghuaCounty\": {\n    name: '彰化縣',\n  },\n  \"NantouCounty\": {\n    name: '南投縣',\n  },\n  \"YunlinCounty\": {\n    name: '雲林縣',\n  },\n  \"Chiayi\": {\n    name: '嘉義市',\n  },\n  \"ChiayiCounty\": {\n    name: '嘉義縣',\n  },\n  \"Tainan\": {\n    name: '台南市',\n  },\n  \"Kaohsiung\": {\n    name: '高雄市',\n  },\n  \"PingtungCounty\": {\n    name: '屏東縣',\n  },\n  \"TaitungCounty\": {\n    name: '台東縣',\n  },\n  \"HualienCounty\": {\n    name: '花蓮縣',\n  },\n  \"YilanCounty\": {\n    name: '宜蘭縣',\n  },\n  \"PenghuCounty\": {\n    name: '澎湖縣',\n  },\n  \"KinmenCounty\": {\n    name: '金門縣',\n  },\n  \"LienchiangCounty\": {\n    name: '連江縣',\n  }\n}\nexport {\n  cityList\n}","export default __webpack_public_path__ + \"static/media/down.bc302be1.svg\";","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useState } from 'react'\nimport down from '../images/down.svg'\nimport { cityList } from '../services/CityData'\n\nexport default function CitySelect() {\n  const cityData = cityList\n  const cityOptions = Object.keys(cityData).map(item => {\n    return (\n      <option value={item}>{cityData[item].name}</option>\n    )\n  })\n  return (\n    <>\n      <select className=\"w-full bg-white border-gray-border rounded border py-3 px-4\">\n        {cityOptions}\n      </select>\n    </>\n  )\n}","import jsSHA from \"jssha\";\nfunction getAuthorizon() {\n  const APPID = \"f90c9da674534df398fca338c8aa34b8\";\n  const APPKEY = \"XEg5uRI-uoeY6vXF0Xr3Udz-HNI\";\n  let GMTStr = new Date().toGMTString();\n  let ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n  ShaObj.setHMACKey(APPKEY, \"TEXT\");\n  ShaObj.update(\"x-date: \" + GMTStr);\n\n  let HMAC = ShaObj.getHMAC(\"B64\");\n\n  let authorization = `hmac username=\"${APPID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"`;\n  return { Authorization: authorization, \"X-Date\": GMTStr };\n}\n\nfunction getCityPath(data = {}) {\n  let url = ''\n  let query = ['$format=JSON']\n  if (data.hasOwnProperty('keyWord')) data.keyWord && query.push(`$filter=contains(RouteName,'${data.keyWord}')`)\n  if (data.hasOwnProperty('limitNum')) query.push(`$top=${data.limitNum}`)\n  let queryStr = query.join('&')\n  url = `https://ptx.transportdata.tw/MOTC/v2/Cycling/Shape/${data.city}?${queryStr}`\n\n  return fetch(\n    url,\n    {\n      headers: getAuthorizon()\n    }\n  ).then((res) => res.json());\n}\n\nexport {\n  getCityPath\n}","export default __webpack_public_path__ + \"static/media/bicycle_logo.564e54a2.svg\";","export default __webpack_public_path__ + \"static/media/table.811e8d4c.svg\";","export default __webpack_public_path__ + \"static/media/map.697ad994.svg\";","import './App.css';\nimport CitySelect from './components/CitySelect'\nimport { getCityPath } from './services/BikeData.js';\nimport React from 'react'\nimport bicycle_logo from './images/bicycle_logo.svg'\nimport table from './images/table.svg'\nimport map from './images/map.svg'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cyclePathList: []\n    }\n  }\n  componentDidMount() {\n    getCityPath({ city: \"Keelung\", limitNum: 3 }).then(\n      (result) => {\n        this.setState({\n          cyclePathList: result\n        })\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n  render() {\n    const pathList = this.state.cyclePathList\n    const hasPathList = this.state.cyclePathList.length > 0\n\n    const pathItems = pathList.map(item => {\n      return (\n        <div className=\"flex py-6 px-7\" >\n          <div className=\"bg-gray-img rounded\" style={{ width: '243px', height: '162px' }}>\n            <img src=\"https://images.unsplash.com/photo-1541584285245-c83a93cce0e8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2342&q=80\" width=\"243px\" height=\"182px\" />\n          </div>\n          <div className=\"ml-8\">\n            <h2 className=\"text-gray-text text-lg\">{item.RouteName}</h2>\n            <div className=\"text-gray-border text-lg mt-2\">{item.CyclingLength} 公里</div>\n            <div className=\"flex flex-col text-sm text-secondary mt-4\">\n              <div className=\"flex mb-3\">\n                <span className=\"mr-2\">起點</span>\n                <span>{item.RoadSectionStart}</span>\n              </div>\n              <div className=\"flex mb-3\">\n                <span className=\"mr-2\">迄點</span>\n                <span>{item.RoadSectionEnd}</span>\n              </div>\n              {/* <div className=\"flex mb-3\">\n                <span className=\"mr-2\">方向</span>\n                <span className=\"flex-auto\">路上</span>\n              </div> */}\n            </div>\n          </div>\n        </div>\n      )\n    })\n\n    return (\n      <div className=\"bg-primary-lighter flex\" >\n        {/* sidebar */}\n        <div className=\"w-1/4 bg-primary-light p-10\" >\n          {/* logo */}\n          <div div className=\"logo text-primary flex items-end\" >\n            <div>taiwan</div>\n            <img src={bicycle_logo} />\n            <div>bicycle</div>\n          </div>\n          {/* search */}\n          <div div className=\"mt-14 text-primary\" >\n            <span className=\"text-sm mb-3\">這次想去哪裡玩</span>\n            <CitySelect></CitySelect>\n          </div>\n        </div>\n        {/* content */}\n        < div className=\"p-10\" >\n          {/* top */}\n          <div className=\"w-max flex\" >\n            {/* actions */}\n            <div className=\"bg-primary text-white border-primary border rounded-l px-8 py-3 cursor-pointer flex\">\n              <img src={table} className=\"mr-3\" /> 列表</div>\n            <div className=\"border-primary border rounded-right rounded-r px-8 py-3 text-primary cursor-pointer flex\">\n              <img src={map} className=\"mr-3\" />地圖</div>\n          </div>\n          {/* list */}\n          <div div className=\"flex flex-col\" >\n            {hasPathList && pathItems}\n          </div>\n        </div >\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}